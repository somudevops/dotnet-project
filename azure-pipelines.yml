# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  Env: "Dev"
  BuildConfiguration: "Release"
  BuildPlatform: "Any Cpu"

steps:
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: 
      checkLatest: true
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: 'Dotnet/FlowerShop.sln'
      feedsToUse: 'select'
  - task: VSBuild@1
    inputs:
      solution: 'Dotnet/FlowerShop.sln'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'MANI''s AZURE(12c0d075-059f-4523-8432-5eee63b9ac55)'
      appType: 'webApp'
      appName: 'dotnet-project-webapp'
      package: '$(System.DefaultWorkingDirectory)'
      deploymentMethod: 'auto'